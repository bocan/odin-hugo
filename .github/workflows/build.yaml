name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

env:
  DOCKER_IMAGE_NAME: bocan/hugo

permissions:
  contents: read
  id-token: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Login to Cloud Cauldron ECR
        uses: docker/login-action@v3
        with:
          registry: 894121584238.dkr.ecr.eu-west-1.amazonaws.com
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          sbom: true
          provenance: mode=max
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:build-cache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:build-cache,mode=max
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}

      # --- Signing section ---
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Set IMAGE digest ref
        run: echo "IMAGE_REF=${{ env.DOCKER_IMAGE_NAME }}@${{ steps.build.outputs.digest }}" >> $GITHUB_ENV

      - name: Cosign sign image (keyless)
        env:
          COSIGN_EXPERIMENTAL: "true"   # enable keyless
        run: |
          cosign sign --yes "${IMAGE_REF}"

      # ---- Generate & attest a signed SBOM (SPDX JSON) ----
      - name: Generate SBOM (SPDX JSON) for linux/amd64
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE_REF }}
          platform: linux/amd64
          format: spdx-json
          output-file: sbom-amd64.spdx.json

      - name: Cosign attest SBOM (in-toto)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign attest --yes --type spdx --predicate sbom-amd64.spdx.json "${IMAGE_REF}"

      - name: Verify image signature
        run: |
          cosign verify \
            --certificate-identity-regexp "https://github.com/${{ github.repository }}/.github/workflows/.*@${{ github.ref }}" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            "${IMAGE_REF}"

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_IMAGE_NAME }}
